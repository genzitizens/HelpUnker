version: "3.9"

services:
  db:
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-helpunker}
      POSTGRES_USER: ${POSTGRES_USER:-helpunker}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-helpunker}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-helpunker}"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: ..
      dockerfile: infra/Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/${POSTGRES_DB:-helpunker}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER:-helpunker}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD:-helpunker}
      SPRING_LIQUIBASE_ENABLED: "true"
    ports:
      - "${APP_PORT:-8080}:8080"
    depends_on:
      db:
        condition: service_healthy

  tests:
    profiles: ["tests"]
    build:
      context: ..
      dockerfile: infra/Dockerfile.test
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/${POSTGRES_DB:-helpunker}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER:-helpunker}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD:-helpunker}
    depends_on:
      db:
        condition: service_healthy
    command: ["./mvnw", "-B", "verify"]

volumes:
  postgres-data:
